server.port=9000
server.address=127.0.0.1
# the userInfoUri is by far not the only way of hooking a resource server up with a way to decode tokens.
# In fact itâ€™s sort of a lowest common denominator (and not part of the spec), but quite often available from OAuth2
# providers (like Facebook, Cloud Foundry, Github), and other choices are available. For instance you can encode the
# user authentication in the token itself (e.g. with JWT), or use a shared backend store. There is also a /token_info
# endpoint in CloudFoundry, which provides more detailed information than the user info endpoint, but which requires
# more thorough authentication. Different options (naturally) provide different benefits and trade-offs, but a full
# discussion of those is outside the scope of this section.
security.oauth2.resource.userInfoUri=http://localhost:9999/uaa/user
security.oauth2.resource.jwt.keyValue=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB\n-----END PUBLIC KEY-----